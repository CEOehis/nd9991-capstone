version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.11.2

jobs:
  lint-api:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/project/api
    steps:
      - checkout:
          path: ~/project
      - run: npm install
      - run:
          name: Run lint analysis
          command: npm run lint

  test-api:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/project/api
    steps:
      - checkout:
          path: ~/project
      - run: npm install
      - run:
          name: Run unit tests
          command: npm run test

  check-vulnerabilities:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/project/api
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Run security audit on packages
          command: |
            npm audit --audit-level=critical

  publish-docker-image:
    docker:
      - image: cimg/base:2020.09
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set environment variables
          command: |
            echo 'export DOCKER_HUB_USERNAME=$DOCKER_HUB_USERNAME' >> $BASH_ENV
            echo 'export DOCKER_HUB_PASSWORD=$DOCKER_HUB_PASSWORD' >> $BASH_ENV
      - run:
          name: Build and publish docker image
          command: ./infrastructure/scripts/publish_docker.sh

  deploy-api:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - kubernetes/install-kubectl
      - run: aws eks --region us-east-2 update-kubeconfig --name capstone-api
      - run:
          name: Run deployment and Service in deployment config
          command: kubectl apply -f infrastructure/config/deployment.yml
      - run:
          name: Trigger rolling update
          command: kubectl rollout restart deployment capstone-api
      - run: kubectl get svc capstone-api

workflows:
  default:
    jobs:
      - lint-api
      - test-api
      - check-vulnerabilities
      - publish-docker-image:
          requires: [lint-api, test-api, check-vulnerabilities]
          filters:
            branches:
              only: main
      - deploy-api:
          requires: [publish-docker-image]
          filters:
            branches:
              only: main